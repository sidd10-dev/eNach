{"ast":null,"code":"'use strict';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar format = require('./format');\n\nfunction fillExcept(info, fillExceptKeys, metadataKey) {\n  var savedKeys = fillExceptKeys.reduce(function (acc, key) {\n    acc[key] = info[key];\n    delete info[key];\n    return acc;\n  }, {});\n  var metadata = Object.keys(info).reduce(function (acc, key) {\n    acc[key] = info[key];\n    delete info[key];\n    return acc;\n  }, {});\n  Object.assign(info, savedKeys, _defineProperty({}, metadataKey, metadata));\n  return info;\n}\n\nfunction fillWith(info, fillWithKeys, metadataKey) {\n  info[metadataKey] = fillWithKeys.reduce(function (acc, key) {\n    acc[key] = info[key];\n    delete info[key];\n    return acc;\n  }, {});\n  return info;\n}\n/**\n * Adds in a \"metadata\" object to collect extraneous data, similar to the metadata\n * object in winston 2.x.\n */\n\n\nmodule.exports = format(function (info) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var metadataKey = 'metadata';\n\n  if (opts.key) {\n    metadataKey = opts.key;\n  }\n\n  var fillExceptKeys = [];\n\n  if (!opts.fillExcept && !opts.fillWith) {\n    fillExceptKeys.push('level');\n    fillExceptKeys.push('message');\n  }\n\n  if (opts.fillExcept) {\n    fillExceptKeys = opts.fillExcept;\n  }\n\n  if (fillExceptKeys.length > 0) {\n    return fillExcept(info, fillExceptKeys, metadataKey);\n  }\n\n  if (opts.fillWith) {\n    return fillWith(info, opts.fillWith, metadataKey);\n  }\n\n  return info;\n});","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","format","require","fillExcept","info","fillExceptKeys","metadataKey","savedKeys","reduce","acc","metadata","keys","assign","fillWith","fillWithKeys","module","exports","opts","arguments","length","undefined","push"],"sources":["D:/Other Files/tktnew/eMandate/client/node_modules/logform/dist/metadata.js"],"sourcesContent":["'use strict';\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar format = require('./format');\n\nfunction fillExcept(info, fillExceptKeys, metadataKey) {\n  var savedKeys = fillExceptKeys.reduce(function (acc, key) {\n    acc[key] = info[key];\n    delete info[key];\n    return acc;\n  }, {});\n  var metadata = Object.keys(info).reduce(function (acc, key) {\n    acc[key] = info[key];\n    delete info[key];\n    return acc;\n  }, {});\n  Object.assign(info, savedKeys, _defineProperty({}, metadataKey, metadata));\n  return info;\n}\n\nfunction fillWith(info, fillWithKeys, metadataKey) {\n  info[metadataKey] = fillWithKeys.reduce(function (acc, key) {\n    acc[key] = info[key];\n    delete info[key];\n    return acc;\n  }, {});\n  return info;\n}\n/**\n * Adds in a \"metadata\" object to collect extraneous data, similar to the metadata\n * object in winston 2.x.\n */\n\n\nmodule.exports = format(function (info) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var metadataKey = 'metadata';\n\n  if (opts.key) {\n    metadataKey = opts.key;\n  }\n\n  var fillExceptKeys = [];\n\n  if (!opts.fillExcept && !opts.fillWith) {\n    fillExceptKeys.push('level');\n    fillExceptKeys.push('message');\n  }\n\n  if (opts.fillExcept) {\n    fillExceptKeys = opts.fillExcept;\n  }\n\n  if (fillExceptKeys.length > 0) {\n    return fillExcept(info, fillExceptKeys, metadataKey);\n  }\n\n  if (opts.fillWith) {\n    return fillWith(info, opts.fillWith, metadataKey);\n  }\n\n  return info;\n});"],"mappings":"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"},"metadata":{},"sourceType":"script"}