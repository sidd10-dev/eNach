{"ast":null,"code":"var _jsxFileName = \"D:\\\\Other Files\\\\tktnew\\\\eMandate\\\\client\\\\src\\\\components\\\\2fa\\\\TwoFactor.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport { useState, useRef, useEffect } from \"react\";\nimport Button from \"../Button/Button\";\nimport ErrorModal from \"../ErrorModal/ErrorModal\";\nimport styles from './TwoFactor.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TwoFactor = props => {\n  _s();\n\n  const [isValidUser, setIsValidUser] = useState(false);\n  const [token, setToken] = useState();\n  const [error, setError] = useState(null);\n  const [qr, setQr] = useState(\"\");\n  const userNameInputRef = useRef();\n  const passwordInputRef = useRef();\n  const codeInputRef = useRef();\n\n  const resetForm = () => {\n    userNameInputRef.current.value = \"\";\n    passwordInputRef.current.value = \"\";\n    codeInputRef.current.value = \"\";\n  };\n\n  const verifyFormHandler = event => {\n    event.preventDefault();\n    const username = userNameInputRef.current.value;\n    const password = passwordInputRef.current.value;\n    axios.post(\"http://localhost:3001/api/verifyUser\", {\n      username,\n      password\n    }).then(res => {\n      // console.log(res)\n      setIsValidUser(res.data.isValidUser);\n      setToken(res.data.token);\n    }).catch(e => {\n      setError({\n        msg: e.response.data.msg\n      }); // console.log(e)\n    });\n\n    if (isValidUser) {\n      axios.post(\"http://localhost:3001/api/verifyUser\", {\n        username,\n        password,\n        token\n      }).then(res => {\n        setQr(res.data.qr);\n      }).catch(e => {\n        setError({\n          msg: e.response.data\n        });\n      });\n    }\n\n    resetForm();\n  };\n\n  const twoFactorSubmitHandler = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isValidUser && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Set Up 2FA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: qr,\n          className: styles.qr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSibmit: twoFactorSubmitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"2FACode\",\n            children: \"2FA Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"2FACode\",\n            ref: codeInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), !isValidUser && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n        errorMsg: error.msg,\n        onCancelError: () => setError(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Enter your company credentials\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: verifyFormHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          ref: userNameInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(TwoFactor, \"3jf1N8DGmCyzPTTNpCPZuvIDwKw=\");\n\n_c = TwoFactor;\nexport default TwoFactor;\n\nvar _c;\n\n$RefreshReg$(_c, \"TwoFactor\");","map":{"version":3,"names":["axios","React","useState","useRef","useEffect","Button","ErrorModal","styles","TwoFactor","props","isValidUser","setIsValidUser","token","setToken","error","setError","qr","setQr","userNameInputRef","passwordInputRef","codeInputRef","resetForm","current","value","verifyFormHandler","event","preventDefault","username","password","post","then","res","data","catch","e","msg","response","twoFactorSubmitHandler"],"sources":["D:/Other Files/tktnew/eMandate/client/src/components/2fa/TwoFactor.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport Button from \"../Button/Button\";\r\nimport ErrorModal from \"../ErrorModal/ErrorModal\";\r\nimport styles from './TwoFactor.module.css';\r\n\r\nconst TwoFactor = (props) => {\r\n    const [isValidUser, setIsValidUser] = useState(false)\r\n    const [token, setToken] = useState()\r\n    const [error, setError] = useState(null)\r\n    const [qr, setQr] = useState(\"\")\r\n    const userNameInputRef = useRef()\r\n    const passwordInputRef = useRef()\r\n    const codeInputRef = useRef()\r\n\r\n    const resetForm = () => {\r\n        userNameInputRef.current.value = \"\"\r\n        passwordInputRef.current.value = \"\"\r\n        codeInputRef.current.value = \"\"\r\n    }\r\n\r\n    const verifyFormHandler = (event) => {\r\n        event.preventDefault()\r\n        const username = userNameInputRef.current.value\r\n        const password = passwordInputRef.current.value\r\n        axios.post(\"http://localhost:3001/api/verifyUser\", {\r\n            username,\r\n            password\r\n        }).then(res => {\r\n            // console.log(res)\r\n            setIsValidUser(res.data.isValidUser)\r\n            setToken(res.data.token)\r\n        }).catch(e => {\r\n            setError({ msg: e.response.data.msg })\r\n            // console.log(e)\r\n        })\r\n\r\n        if (isValidUser) {\r\n            axios.post(\"http://localhost:3001/api/verifyUser\", {\r\n                username,\r\n                password,\r\n                token\r\n            }).then(res => {\r\n                setQr(res.data.qr)\r\n            }).catch(e => {\r\n                setError({ msg: e.response.data })\r\n            })\r\n        }\r\n\r\n        resetForm()\r\n    }\r\n\r\n    const twoFactorSubmitHandler = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isValidUser && (\r\n                <>\r\n                    <h2>Set Up 2FA</h2>\r\n                    <div>\r\n                        <img src={qr} className={styles.qr}></img>\r\n                        <form onSibmit = {twoFactorSubmitHandler}>\r\n                            <label htmlFor=\"2FACode\">2FA Code</label>\r\n                            <input type=\"text\" name=\"2FACode\" ref={codeInputRef}></input>\r\n                        </form>\r\n                    </div>\r\n                </>\r\n            )}\r\n            {!isValidUser && (\r\n                <>\r\n                    {error && (\r\n                        <ErrorModal errorMsg={error.msg} onCancelError={() => setError(null)}></ErrorModal>\r\n                    )}\r\n                    <h2>Enter your company credentials</h2>\r\n                    <form onSubmit={verifyFormHandler}>\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <input type=\"text\" name=\"username\" ref={userNameInputRef}></input>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" name=\"password\" ref={passwordInputRef}></input>\r\n                        <Button type=\"submit\">Login</Button>\r\n                    </form>\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TwoFactor"],"mappings":"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"},"metadata":{},"sourceType":"module"}