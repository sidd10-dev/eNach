{"ast":null,"code":"/* eslint-disable complexity,max-statements */\n\n/**\r\n * file.js: Transport for outputting to a local log file.\r\n *\r\n * (C) 2010 Charlie Robbins\r\n * MIT LICENCE\r\n */\n'use strict';\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar asyncSeries = require('async/series');\n\nvar zlib = require('zlib');\n\nvar _require = require('triple-beam'),\n    MESSAGE = _require.MESSAGE;\n\nvar _require2 = require('readable-stream'),\n    Stream = _require2.Stream,\n    PassThrough = _require2.PassThrough;\n\nvar TransportStream = require('winston-transport');\n\nvar debug = require('@dabh/diagnostics')('winston:file');\n\nvar os = require('os');\n\nvar tailFile = require('../tail-file');\n/**\r\n * Transport for outputting to a local log file.\r\n * @type {File}\r\n * @extends {TransportStream}\r\n */\n\n\nmodule.exports = /*#__PURE__*/function (_TransportStream) {\n  _inherits(File, _TransportStream);\n\n  var _super = _createSuper(File);\n  /**\r\n   * Constructor function for the File transport object responsible for\r\n   * persisting log messages and metadata to one or more files.\r\n   * @param {Object} options - Options for this instance.\r\n   */\n\n\n  function File() {\n    var _this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, File);\n\n    _this = _super.call(this, options); // Expose the name of this Transport on the prototype.\n\n    _this.name = options.name || 'file'; // Helper function which throws an `Error` in the event that any of the\n    // rest of the arguments is present in `options`.\n\n    function throwIf(target) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      args.slice(1).forEach(function (name) {\n        if (options[name]) {\n          throw new Error(\"Cannot set \".concat(name, \" and \").concat(target, \" together\"));\n        }\n      });\n    } // Setup the base stream that always gets piped to to handle buffering.\n\n\n    _this._stream = new PassThrough();\n\n    _this._stream.setMaxListeners(30); // Bind this context for listener methods.\n\n\n    _this._onError = _this._onError.bind(_assertThisInitialized(_this));\n\n    if (options.filename || options.dirname) {\n      throwIf('filename or dirname', 'stream');\n      _this._basename = _this.filename = options.filename ? path.basename(options.filename) : 'winston.log';\n      _this.dirname = options.dirname || path.dirname(options.filename);\n      _this.options = options.options || {\n        flags: 'a'\n      };\n    } else if (options.stream) {\n      // eslint-disable-next-line no-console\n      console.warn('options.stream will be removed in winston@4. Use winston.transports.Stream');\n      throwIf('stream', 'filename', 'maxsize');\n      _this._dest = _this._stream.pipe(_this._setupStream(options.stream));\n      _this.dirname = path.dirname(_this._dest.path); // We need to listen for drain events when write() returns false. This\n      // can make node mad at times.\n    } else {\n      throw new Error('Cannot log to file without filename or stream.');\n    }\n\n    _this.maxsize = options.maxsize || null;\n    _this.rotationFormat = options.rotationFormat || false;\n    _this.zippedArchive = options.zippedArchive || false;\n    _this.maxFiles = options.maxFiles || null;\n    _this.eol = typeof options.eol === 'string' ? options.eol : os.EOL;\n    _this.tailable = options.tailable || false; // Internal state variables representing the number of files this instance\n    // has created and the current size (in bytes) of the current logfile.\n\n    _this._size = 0;\n    _this._pendingSize = 0;\n    _this._created = 0;\n    _this._drain = false;\n    _this._opening = false;\n    _this._ending = false;\n    if (_this.dirname) _this._createLogDirIfNotExist(_this.dirname);\n\n    _this.open();\n\n    return _this;\n  }\n\n  _createClass(File, [{\n    key: \"finishIfEnding\",\n    value: function finishIfEnding() {\n      var _this2 = this;\n\n      if (this._ending) {\n        if (this._opening) {\n          this.once('open', function () {\n            _this2._stream.once('finish', function () {\n              return _this2.emit('finish');\n            });\n\n            setImmediate(function () {\n              return _this2._stream.end();\n            });\n          });\n        } else {\n          this._stream.once('finish', function () {\n            return _this2.emit('finish');\n          });\n\n          setImmediate(function () {\n            return _this2._stream.end();\n          });\n        }\n      }\n    }\n    /**\r\n     * Core logging method exposed to Winston. Metadata is optional.\r\n     * @param {Object} info - TODO: add param description.\r\n     * @param {Function} callback - TODO: add param description.\r\n     * @returns {undefined}\r\n     */\n\n  }, {\n    key: \"log\",\n    value: function log(info) {\n      var _this3 = this;\n\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {}; // Remark: (jcrugzz) What is necessary about this callback(null, true) now\n      // when thinking about 3.x? Should silent be handled in the base\n      // TransportStream _write method?\n\n      if (this.silent) {\n        callback();\n        return true;\n      } // Output stream buffer is full and has asked us to wait for the drain event\n\n\n      if (this._drain) {\n        this._stream.once('drain', function () {\n          _this3._drain = false;\n\n          _this3.log(info, callback);\n        });\n\n        return;\n      }\n\n      if (this._rotate) {\n        this._stream.once('rotate', function () {\n          _this3._rotate = false;\n\n          _this3.log(info, callback);\n        });\n\n        return;\n      } // Grab the raw string and append the expected EOL.\n\n\n      var output = \"\".concat(info[MESSAGE]).concat(this.eol);\n      var bytes = Buffer.byteLength(output); // After we have written to the PassThrough check to see if we need\n      // to rotate to the next file.\n      //\n      // Remark: This gets called too early and does not depict when data\n      // has been actually flushed to disk.\n\n      function logged() {\n        var _this4 = this;\n\n        this._size += bytes;\n        this._pendingSize -= bytes;\n        debug('logged %s %s', this._size, output);\n        this.emit('logged', info); // Do not attempt to rotate files while opening\n\n        if (this._opening) {\n          return;\n        } // Check to see if we need to end the stream and create a new one.\n\n\n        if (!this._needsNewFile()) {\n          return;\n        } // End the current stream, ensure it flushes and create a new one.\n        // This could potentially be optimized to not run a stat call but its\n        // the safest way since we are supporting `maxFiles`.\n\n\n        this._rotate = true;\n\n        this._endStream(function () {\n          return _this4._rotateFile();\n        });\n      } // Keep track of the pending bytes being written while files are opening\n      // in order to properly rotate the PassThrough this._stream when the file\n      // eventually does open.\n\n\n      this._pendingSize += bytes;\n\n      if (this._opening && !this.rotatedWhileOpening && this._needsNewFile(this._size + this._pendingSize)) {\n        this.rotatedWhileOpening = true;\n      }\n\n      var written = this._stream.write(output, logged.bind(this));\n\n      if (!written) {\n        this._drain = true;\n\n        this._stream.once('drain', function () {\n          _this3._drain = false;\n          callback();\n        });\n      } else {\n        callback(); // eslint-disable-line callback-return\n      }\n\n      debug('written', written, this._drain);\n      this.finishIfEnding();\n      return written;\n    }\n    /**\r\n     * Query the transport. Options object is optional.\r\n     * @param {Object} options - Loggly-like query options for this instance.\r\n     * @param {function} callback - Continuation to respond to when complete.\r\n     * TODO: Refactor me.\r\n     */\n\n  }, {\n    key: \"query\",\n    value: function query(options, callback) {\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n\n      options = normalizeQuery(options);\n      var file = path.join(this.dirname, this.filename);\n      var buff = '';\n      var results = [];\n      var row = 0;\n      var stream = fs.createReadStream(file, {\n        encoding: 'utf8'\n      });\n      stream.on('error', function (err) {\n        if (stream.readable) {\n          stream.destroy();\n        }\n\n        if (!callback) {\n          return;\n        }\n\n        return err.code !== 'ENOENT' ? callback(err) : callback(null, results);\n      });\n      stream.on('data', function (data) {\n        data = (buff + data).split(/\\n+/);\n        var l = data.length - 1;\n        var i = 0;\n\n        for (; i < l; i++) {\n          if (!options.start || row >= options.start) {\n            add(data[i]);\n          }\n\n          row++;\n        }\n\n        buff = data[l];\n      });\n      stream.on('close', function () {\n        if (buff) {\n          add(buff, true);\n        }\n\n        if (options.order === 'desc') {\n          results = results.reverse();\n        } // eslint-disable-next-line callback-return\n\n\n        if (callback) callback(null, results);\n      });\n\n      function add(buff, attempt) {\n        try {\n          var log = JSON.parse(buff);\n\n          if (check(log)) {\n            push(log);\n          }\n        } catch (e) {\n          if (!attempt) {\n            stream.emit('error', e);\n          }\n        }\n      }\n\n      function push(log) {\n        if (options.rows && results.length >= options.rows && options.order !== 'desc') {\n          if (stream.readable) {\n            stream.destroy();\n          }\n\n          return;\n        }\n\n        if (options.fields) {\n          log = options.fields.reduce(function (obj, key) {\n            obj[key] = log[key];\n            return obj;\n          }, {});\n        }\n\n        if (options.order === 'desc') {\n          if (results.length >= options.rows) {\n            results.shift();\n          }\n        }\n\n        results.push(log);\n      }\n\n      function check(log) {\n        if (!log) {\n          return;\n        }\n\n        if (_typeof(log) !== 'object') {\n          return;\n        }\n\n        var time = new Date(log.timestamp);\n\n        if (options.from && time < options.from || options.until && time > options.until || options.level && options.level !== log.level) {\n          return;\n        }\n\n        return true;\n      }\n\n      function normalizeQuery(options) {\n        options = options || {}; // limit\n\n        options.rows = options.rows || options.limit || 10; // starting row offset\n\n        options.start = options.start || 0; // now\n\n        options.until = options.until || new Date();\n\n        if (_typeof(options.until) !== 'object') {\n          options.until = new Date(options.until);\n        } // now - 24\n\n\n        options.from = options.from || options.until - 24 * 60 * 60 * 1000;\n\n        if (_typeof(options.from) !== 'object') {\n          options.from = new Date(options.from);\n        } // 'asc' or 'desc'\n\n\n        options.order = options.order || 'desc';\n        return options;\n      }\n    }\n    /**\r\n     * Returns a log stream for this transport. Options object is optional.\r\n     * @param {Object} options - Stream options for this instance.\r\n     * @returns {Stream} - TODO: add return description.\r\n     * TODO: Refactor me.\r\n     */\n\n  }, {\n    key: \"stream\",\n    value: function stream() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var file = path.join(this.dirname, this.filename);\n      var stream = new Stream();\n      var tail = {\n        file: file,\n        start: options.start\n      };\n      stream.destroy = tailFile(tail, function (err, line) {\n        if (err) {\n          return stream.emit('error', err);\n        }\n\n        try {\n          stream.emit('data', line);\n          line = JSON.parse(line);\n          stream.emit('log', line);\n        } catch (e) {\n          stream.emit('error', e);\n        }\n      });\n      return stream;\n    }\n    /**\r\n     * Checks to see the filesize of.\r\n     * @returns {undefined}\r\n     */\n\n  }, {\n    key: \"open\",\n    value: function open() {\n      var _this5 = this; // If we do not have a filename then we were passed a stream and\n      // don't need to keep track of size.\n\n\n      if (!this.filename) return;\n      if (this._opening) return;\n      this._opening = true; // Stat the target file to get the size and create the stream.\n\n      this.stat(function (err, size) {\n        if (err) {\n          return _this5.emit('error', err);\n        }\n\n        debug('stat done: %s { size: %s }', _this5.filename, size);\n        _this5._size = size;\n        _this5._dest = _this5._createStream(_this5._stream);\n        _this5._opening = false;\n\n        _this5.once('open', function () {\n          if (_this5._stream.eventNames().includes('rotate')) {\n            _this5._stream.emit('rotate');\n          } else {\n            _this5._rotate = false;\n          }\n        });\n      });\n    }\n    /**\r\n     * Stat the file and assess information in order to create the proper stream.\r\n     * @param {function} callback - TODO: add param description.\r\n     * @returns {undefined}\r\n     */\n\n  }, {\n    key: \"stat\",\n    value: function stat(callback) {\n      var _this6 = this;\n\n      var target = this._getFile();\n\n      var fullpath = path.join(this.dirname, target);\n      fs.stat(fullpath, function (err, stat) {\n        if (err && err.code === 'ENOENT') {\n          debug('ENOENT ok', fullpath); // Update internally tracked filename with the new target name.\n\n          _this6.filename = target;\n          return callback(null, 0);\n        }\n\n        if (err) {\n          debug(\"err \".concat(err.code, \" \").concat(fullpath));\n          return callback(err);\n        }\n\n        if (!stat || _this6._needsNewFile(stat.size)) {\n          // If `stats.size` is greater than the `maxsize` for this\n          // instance then try again.\n          return _this6._incFile(function () {\n            return _this6.stat(callback);\n          });\n        } // Once we have figured out what the filename is, set it\n        // and return the size.\n\n\n        _this6.filename = target;\n        callback(null, stat.size);\n      });\n    }\n    /**\r\n     * Closes the stream associated with this instance.\r\n     * @param {function} cb - TODO: add param description.\r\n     * @returns {undefined}\r\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(cb) {\n      var _this7 = this;\n\n      if (!this._stream) {\n        return;\n      }\n\n      this._stream.end(function () {\n        if (cb) {\n          cb(); // eslint-disable-line callback-return\n        }\n\n        _this7.emit('flush');\n\n        _this7.emit('closed');\n      });\n    }\n    /**\r\n     * TODO: add method description.\r\n     * @param {number} size - TODO: add param description.\r\n     * @returns {undefined}\r\n     */\n\n  }, {\n    key: \"_needsNewFile\",\n    value: function _needsNewFile(size) {\n      size = size || this._size;\n      return this.maxsize && size >= this.maxsize;\n    }\n    /**\r\n     * TODO: add method description.\r\n     * @param {Error} err - TODO: add param description.\r\n     * @returns {undefined}\r\n     */\n\n  }, {\n    key: \"_onError\",\n    value: function _onError(err) {\n      this.emit('error', err);\n    }\n    /**\r\n     * TODO: add method description.\r\n     * @param {Stream} stream - TODO: add param description.\r\n     * @returns {mixed} - TODO: add return description.\r\n     */\n\n  }, {\n    key: \"_setupStream\",\n    value: function _setupStream(stream) {\n      stream.on('error', this._onError);\n      return stream;\n    }\n    /**\r\n     * TODO: add method description.\r\n     * @param {Stream} stream - TODO: add param description.\r\n     * @returns {mixed} - TODO: add return description.\r\n     */\n\n  }, {\n    key: \"_cleanupStream\",\n    value: function _cleanupStream(stream) {\n      stream.removeListener('error', this._onError);\n      return stream;\n    }\n    /**\r\n     * TODO: add method description.\r\n     */\n\n  }, {\n    key: \"_rotateFile\",\n    value: function _rotateFile() {\n      var _this8 = this;\n\n      this._incFile(function () {\n        return _this8.open();\n      });\n    }\n    /**\r\n     * Unpipe from the stream that has been marked as full and end it so it\r\n     * flushes to disk.\r\n     *\r\n     * @param {function} callback - Callback for when the current file has closed.\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_endStream\",\n    value: function _endStream() {\n      var _this9 = this;\n\n      var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};\n\n      if (this._dest) {\n        this._stream.unpipe(this._dest);\n\n        this._dest.end(function () {\n          _this9._cleanupStream(_this9._dest);\n\n          callback();\n        });\n      } else {\n        callback(); // eslint-disable-line callback-return\n      }\n    }\n    /**\r\n     * Returns the WritableStream for the active file on this instance. If we\r\n     * should gzip the file then a zlib stream is returned.\r\n     *\r\n     * @param {ReadableStream} source – PassThrough to pipe to the file when open.\r\n     * @returns {WritableStream} Stream that writes to disk for the active file.\r\n     */\n\n  }, {\n    key: \"_createStream\",\n    value: function _createStream(source) {\n      var _this10 = this;\n\n      var fullpath = path.join(this.dirname, this.filename);\n      debug('create stream start', fullpath, this.options);\n      var dest = fs.createWriteStream(fullpath, this.options) // TODO: What should we do with errors here?\n      .on('error', function (err) {\n        return debug(err);\n      }).on('close', function () {\n        return debug('close', dest.path, dest.bytesWritten);\n      }).on('open', function () {\n        debug('file open ok', fullpath);\n\n        _this10.emit('open', fullpath);\n\n        source.pipe(dest); // If rotation occured during the open operation then we immediately\n        // start writing to a new PassThrough, begin opening the next file\n        // and cleanup the previous source and dest once the source has drained.\n\n        if (_this10.rotatedWhileOpening) {\n          _this10._stream = new PassThrough();\n\n          _this10._stream.setMaxListeners(30);\n\n          _this10._rotateFile();\n\n          _this10.rotatedWhileOpening = false;\n\n          _this10._cleanupStream(dest);\n\n          source.end();\n        }\n      });\n      debug('create stream ok', fullpath);\n\n      if (this.zippedArchive) {\n        var gzip = zlib.createGzip();\n        gzip.pipe(dest);\n        return gzip;\n      }\n\n      return dest;\n    }\n    /**\r\n     * TODO: add method description.\r\n     * @param {function} callback - TODO: add param description.\r\n     * @returns {undefined}\r\n     */\n\n  }, {\n    key: \"_incFile\",\n    value: function _incFile(callback) {\n      debug('_incFile', this.filename);\n      var ext = path.extname(this._basename);\n      var basename = path.basename(this._basename, ext);\n\n      if (!this.tailable) {\n        this._created += 1;\n\n        this._checkMaxFilesIncrementing(ext, basename, callback);\n      } else {\n        this._checkMaxFilesTailable(ext, basename, callback);\n      }\n    }\n    /**\r\n     * Gets the next filename to use for this instance in the case that log\r\n     * filesizes are being capped.\r\n     * @returns {string} - TODO: add return description.\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_getFile\",\n    value: function _getFile() {\n      var ext = path.extname(this._basename);\n      var basename = path.basename(this._basename, ext);\n      var isRotation = this.rotationFormat ? this.rotationFormat() : this._created; // Caveat emptor (indexzero): rotationFormat() was broken by design When\n      // combined with max files because the set of files to unlink is never\n      // stored.\n\n      var target = !this.tailable && this._created ? \"\".concat(basename).concat(isRotation).concat(ext) : \"\".concat(basename).concat(ext);\n      return this.zippedArchive && !this.tailable ? \"\".concat(target, \".gz\") : target;\n    }\n    /**\r\n     * Increment the number of files created or checked by this instance.\r\n     * @param {mixed} ext - TODO: add param description.\r\n     * @param {mixed} basename - TODO: add param description.\r\n     * @param {mixed} callback - TODO: add param description.\r\n     * @returns {undefined}\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_checkMaxFilesIncrementing\",\n    value: function _checkMaxFilesIncrementing(ext, basename, callback) {\n      // Check for maxFiles option and delete file.\n      if (!this.maxFiles || this._created < this.maxFiles) {\n        return setImmediate(callback);\n      }\n\n      var oldest = this._created - this.maxFiles;\n      var isOldest = oldest !== 0 ? oldest : '';\n      var isZipped = this.zippedArchive ? '.gz' : '';\n      var filePath = \"\".concat(basename).concat(isOldest).concat(ext).concat(isZipped);\n      var target = path.join(this.dirname, filePath);\n      fs.unlink(target, callback);\n    }\n    /**\r\n     * Roll files forward based on integer, up to maxFiles. e.g. if base if\r\n     * file.log and it becomes oversized, roll to file1.log, and allow file.log\r\n     * to be re-used. If file is oversized again, roll file1.log to file2.log,\r\n     * roll file.log to file1.log, and so on.\r\n     * @param {mixed} ext - TODO: add param description.\r\n     * @param {mixed} basename - TODO: add param description.\r\n     * @param {mixed} callback - TODO: add param description.\r\n     * @returns {undefined}\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_checkMaxFilesTailable\",\n    value: function _checkMaxFilesTailable(ext, basename, callback) {\n      var _this12 = this;\n\n      var tasks = [];\n\n      if (!this.maxFiles) {\n        return;\n      } // const isZipped = this.zippedArchive ? '.gz' : '';\n\n\n      var isZipped = this.zippedArchive ? '.gz' : '';\n\n      for (var x = this.maxFiles - 1; x > 1; x--) {\n        tasks.push(function (i, cb) {\n          var _this11 = this;\n\n          var fileName = \"\".concat(basename).concat(i - 1).concat(ext).concat(isZipped);\n          var tmppath = path.join(this.dirname, fileName);\n          fs.exists(tmppath, function (exists) {\n            if (!exists) {\n              return cb(null);\n            }\n\n            fileName = \"\".concat(basename).concat(i).concat(ext).concat(isZipped);\n            fs.rename(tmppath, path.join(_this11.dirname, fileName), cb);\n          });\n        }.bind(this, x));\n      }\n\n      asyncSeries(tasks, function () {\n        fs.rename(path.join(_this12.dirname, \"\".concat(basename).concat(ext)), path.join(_this12.dirname, \"\".concat(basename, \"1\").concat(ext).concat(isZipped)), callback);\n      });\n    }\n  }, {\n    key: \"_createLogDirIfNotExist\",\n    value: function _createLogDirIfNotExist(dirPath) {\n      /* eslint-disable no-sync */\n      if (!fs.existsSync(dirPath)) {\n        fs.mkdirSync(dirPath, {\n          recursive: true\n        });\n      }\n      /* eslint-enable no-sync */\n\n    }\n  }]);\n\n  return File;\n}(TransportStream);","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","value","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","fs","require","path","asyncSeries","zlib","_require","MESSAGE","_require2","Stream","PassThrough","TransportStream","debug","os","tailFile","module","exports","_TransportStream","File","_super","_this","options","undefined","name","throwIf","_len","args","Array","_key","slice","forEach","Error","concat","_stream","setMaxListeners","_onError","bind","filename","dirname","_basename","basename","flags","stream","console","warn","_dest","pipe","_setupStream","maxsize","rotationFormat","zippedArchive","maxFiles","eol","EOL","tailable","_size","_pendingSize","_created","_drain","_opening","_ending","_createLogDirIfNotExist","open","finishIfEnding","_this2","once","emit","setImmediate","end","log","info","_this3","callback","silent","_rotate","output","bytes","Buffer","byteLength","logged","_this4","_needsNewFile","_endStream","_rotateFile","rotatedWhileOpening","written","write","query","normalizeQuery","file","join","buff","results","row","createReadStream","encoding","on","err","readable","destroy","code","data","split","l","start","add","order","reverse","attempt","JSON","parse","check","push","rows","fields","reduce","shift","time","Date","timestamp","from","until","level","limit","tail","line","_this5","stat","size","_createStream","eventNames","includes","_this6","_getFile","fullpath","_incFile","close","cb","_this7","_cleanupStream","removeListener","_this8","_this9","unpipe","source","_this10","dest","createWriteStream","bytesWritten","gzip","createGzip","ext","extname","_checkMaxFilesIncrementing","_checkMaxFilesTailable","isRotation","oldest","isOldest","isZipped","filePath","unlink","_this12","tasks","x","_this11","fileName","tmppath","exists","rename","dirPath","existsSync","mkdirSync","recursive"],"sources":["D:/Other Files/tktnew/eMandate/client/node_modules/winston/dist/winston/transports/file.js"],"sourcesContent":["/* eslint-disable complexity,max-statements */\n\n/**\r\n * file.js: Transport for outputting to a local log file.\r\n *\r\n * (C) 2010 Charlie Robbins\r\n * MIT LICENCE\r\n */\n'use strict';\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar asyncSeries = require('async/series');\n\nvar zlib = require('zlib');\n\nvar _require = require('triple-beam'),\n    MESSAGE = _require.MESSAGE;\n\nvar _require2 = require('readable-stream'),\n    Stream = _require2.Stream,\n    PassThrough = _require2.PassThrough;\n\nvar TransportStream = require('winston-transport');\n\nvar debug = require('@dabh/diagnostics')('winston:file');\n\nvar os = require('os');\n\nvar tailFile = require('../tail-file');\n/**\r\n * Transport for outputting to a local log file.\r\n * @type {File}\r\n * @extends {TransportStream}\r\n */\n\n\nmodule.exports = /*#__PURE__*/function (_TransportStream) {\n  _inherits(File, _TransportStream);\n\n  var _super = _createSuper(File);\n\n  /**\r\n   * Constructor function for the File transport object responsible for\r\n   * persisting log messages and metadata to one or more files.\r\n   * @param {Object} options - Options for this instance.\r\n   */\n  function File() {\n    var _this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, File);\n\n    _this = _super.call(this, options); // Expose the name of this Transport on the prototype.\n\n    _this.name = options.name || 'file'; // Helper function which throws an `Error` in the event that any of the\n    // rest of the arguments is present in `options`.\n\n    function throwIf(target) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      args.slice(1).forEach(function (name) {\n        if (options[name]) {\n          throw new Error(\"Cannot set \".concat(name, \" and \").concat(target, \" together\"));\n        }\n      });\n    } // Setup the base stream that always gets piped to to handle buffering.\n\n\n    _this._stream = new PassThrough();\n\n    _this._stream.setMaxListeners(30); // Bind this context for listener methods.\n\n\n    _this._onError = _this._onError.bind(_assertThisInitialized(_this));\n\n    if (options.filename || options.dirname) {\n      throwIf('filename or dirname', 'stream');\n      _this._basename = _this.filename = options.filename ? path.basename(options.filename) : 'winston.log';\n      _this.dirname = options.dirname || path.dirname(options.filename);\n      _this.options = options.options || {\n        flags: 'a'\n      };\n    } else if (options.stream) {\n      // eslint-disable-next-line no-console\n      console.warn('options.stream will be removed in winston@4. Use winston.transports.Stream');\n      throwIf('stream', 'filename', 'maxsize');\n      _this._dest = _this._stream.pipe(_this._setupStream(options.stream));\n      _this.dirname = path.dirname(_this._dest.path); // We need to listen for drain events when write() returns false. This\n      // can make node mad at times.\n    } else {\n      throw new Error('Cannot log to file without filename or stream.');\n    }\n\n    _this.maxsize = options.maxsize || null;\n    _this.rotationFormat = options.rotationFormat || false;\n    _this.zippedArchive = options.zippedArchive || false;\n    _this.maxFiles = options.maxFiles || null;\n    _this.eol = typeof options.eol === 'string' ? options.eol : os.EOL;\n    _this.tailable = options.tailable || false; // Internal state variables representing the number of files this instance\n    // has created and the current size (in bytes) of the current logfile.\n\n    _this._size = 0;\n    _this._pendingSize = 0;\n    _this._created = 0;\n    _this._drain = false;\n    _this._opening = false;\n    _this._ending = false;\n    if (_this.dirname) _this._createLogDirIfNotExist(_this.dirname);\n\n    _this.open();\n\n    return _this;\n  }\n\n  _createClass(File, [{\n    key: \"finishIfEnding\",\n    value: function finishIfEnding() {\n      var _this2 = this;\n\n      if (this._ending) {\n        if (this._opening) {\n          this.once('open', function () {\n            _this2._stream.once('finish', function () {\n              return _this2.emit('finish');\n            });\n\n            setImmediate(function () {\n              return _this2._stream.end();\n            });\n          });\n        } else {\n          this._stream.once('finish', function () {\n            return _this2.emit('finish');\n          });\n\n          setImmediate(function () {\n            return _this2._stream.end();\n          });\n        }\n      }\n    }\n    /**\r\n     * Core logging method exposed to Winston. Metadata is optional.\r\n     * @param {Object} info - TODO: add param description.\r\n     * @param {Function} callback - TODO: add param description.\r\n     * @returns {undefined}\r\n     */\n\n  }, {\n    key: \"log\",\n    value: function log(info) {\n      var _this3 = this;\n\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n\n      // Remark: (jcrugzz) What is necessary about this callback(null, true) now\n      // when thinking about 3.x? Should silent be handled in the base\n      // TransportStream _write method?\n      if (this.silent) {\n        callback();\n        return true;\n      } // Output stream buffer is full and has asked us to wait for the drain event\n\n\n      if (this._drain) {\n        this._stream.once('drain', function () {\n          _this3._drain = false;\n\n          _this3.log(info, callback);\n        });\n\n        return;\n      }\n\n      if (this._rotate) {\n        this._stream.once('rotate', function () {\n          _this3._rotate = false;\n\n          _this3.log(info, callback);\n        });\n\n        return;\n      } // Grab the raw string and append the expected EOL.\n\n\n      var output = \"\".concat(info[MESSAGE]).concat(this.eol);\n      var bytes = Buffer.byteLength(output); // After we have written to the PassThrough check to see if we need\n      // to rotate to the next file.\n      //\n      // Remark: This gets called too early and does not depict when data\n      // has been actually flushed to disk.\n\n      function logged() {\n        var _this4 = this;\n\n        this._size += bytes;\n        this._pendingSize -= bytes;\n        debug('logged %s %s', this._size, output);\n        this.emit('logged', info); // Do not attempt to rotate files while opening\n\n        if (this._opening) {\n          return;\n        } // Check to see if we need to end the stream and create a new one.\n\n\n        if (!this._needsNewFile()) {\n          return;\n        } // End the current stream, ensure it flushes and create a new one.\n        // This could potentially be optimized to not run a stat call but its\n        // the safest way since we are supporting `maxFiles`.\n\n\n        this._rotate = true;\n\n        this._endStream(function () {\n          return _this4._rotateFile();\n        });\n      } // Keep track of the pending bytes being written while files are opening\n      // in order to properly rotate the PassThrough this._stream when the file\n      // eventually does open.\n\n\n      this._pendingSize += bytes;\n\n      if (this._opening && !this.rotatedWhileOpening && this._needsNewFile(this._size + this._pendingSize)) {\n        this.rotatedWhileOpening = true;\n      }\n\n      var written = this._stream.write(output, logged.bind(this));\n\n      if (!written) {\n        this._drain = true;\n\n        this._stream.once('drain', function () {\n          _this3._drain = false;\n          callback();\n        });\n      } else {\n        callback(); // eslint-disable-line callback-return\n      }\n\n      debug('written', written, this._drain);\n      this.finishIfEnding();\n      return written;\n    }\n    /**\r\n     * Query the transport. Options object is optional.\r\n     * @param {Object} options - Loggly-like query options for this instance.\r\n     * @param {function} callback - Continuation to respond to when complete.\r\n     * TODO: Refactor me.\r\n     */\n\n  }, {\n    key: \"query\",\n    value: function query(options, callback) {\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n\n      options = normalizeQuery(options);\n      var file = path.join(this.dirname, this.filename);\n      var buff = '';\n      var results = [];\n      var row = 0;\n      var stream = fs.createReadStream(file, {\n        encoding: 'utf8'\n      });\n      stream.on('error', function (err) {\n        if (stream.readable) {\n          stream.destroy();\n        }\n\n        if (!callback) {\n          return;\n        }\n\n        return err.code !== 'ENOENT' ? callback(err) : callback(null, results);\n      });\n      stream.on('data', function (data) {\n        data = (buff + data).split(/\\n+/);\n        var l = data.length - 1;\n        var i = 0;\n\n        for (; i < l; i++) {\n          if (!options.start || row >= options.start) {\n            add(data[i]);\n          }\n\n          row++;\n        }\n\n        buff = data[l];\n      });\n      stream.on('close', function () {\n        if (buff) {\n          add(buff, true);\n        }\n\n        if (options.order === 'desc') {\n          results = results.reverse();\n        } // eslint-disable-next-line callback-return\n\n\n        if (callback) callback(null, results);\n      });\n\n      function add(buff, attempt) {\n        try {\n          var log = JSON.parse(buff);\n\n          if (check(log)) {\n            push(log);\n          }\n        } catch (e) {\n          if (!attempt) {\n            stream.emit('error', e);\n          }\n        }\n      }\n\n      function push(log) {\n        if (options.rows && results.length >= options.rows && options.order !== 'desc') {\n          if (stream.readable) {\n            stream.destroy();\n          }\n\n          return;\n        }\n\n        if (options.fields) {\n          log = options.fields.reduce(function (obj, key) {\n            obj[key] = log[key];\n            return obj;\n          }, {});\n        }\n\n        if (options.order === 'desc') {\n          if (results.length >= options.rows) {\n            results.shift();\n          }\n        }\n\n        results.push(log);\n      }\n\n      function check(log) {\n        if (!log) {\n          return;\n        }\n\n        if (_typeof(log) !== 'object') {\n          return;\n        }\n\n        var time = new Date(log.timestamp);\n\n        if (options.from && time < options.from || options.until && time > options.until || options.level && options.level !== log.level) {\n          return;\n        }\n\n        return true;\n      }\n\n      function normalizeQuery(options) {\n        options = options || {}; // limit\n\n        options.rows = options.rows || options.limit || 10; // starting row offset\n\n        options.start = options.start || 0; // now\n\n        options.until = options.until || new Date();\n\n        if (_typeof(options.until) !== 'object') {\n          options.until = new Date(options.until);\n        } // now - 24\n\n\n        options.from = options.from || options.until - 24 * 60 * 60 * 1000;\n\n        if (_typeof(options.from) !== 'object') {\n          options.from = new Date(options.from);\n        } // 'asc' or 'desc'\n\n\n        options.order = options.order || 'desc';\n        return options;\n      }\n    }\n    /**\r\n     * Returns a log stream for this transport. Options object is optional.\r\n     * @param {Object} options - Stream options for this instance.\r\n     * @returns {Stream} - TODO: add return description.\r\n     * TODO: Refactor me.\r\n     */\n\n  }, {\n    key: \"stream\",\n    value: function stream() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var file = path.join(this.dirname, this.filename);\n      var stream = new Stream();\n      var tail = {\n        file: file,\n        start: options.start\n      };\n      stream.destroy = tailFile(tail, function (err, line) {\n        if (err) {\n          return stream.emit('error', err);\n        }\n\n        try {\n          stream.emit('data', line);\n          line = JSON.parse(line);\n          stream.emit('log', line);\n        } catch (e) {\n          stream.emit('error', e);\n        }\n      });\n      return stream;\n    }\n    /**\r\n     * Checks to see the filesize of.\r\n     * @returns {undefined}\r\n     */\n\n  }, {\n    key: \"open\",\n    value: function open() {\n      var _this5 = this;\n\n      // If we do not have a filename then we were passed a stream and\n      // don't need to keep track of size.\n      if (!this.filename) return;\n      if (this._opening) return;\n      this._opening = true; // Stat the target file to get the size and create the stream.\n\n      this.stat(function (err, size) {\n        if (err) {\n          return _this5.emit('error', err);\n        }\n\n        debug('stat done: %s { size: %s }', _this5.filename, size);\n        _this5._size = size;\n        _this5._dest = _this5._createStream(_this5._stream);\n        _this5._opening = false;\n\n        _this5.once('open', function () {\n          if (_this5._stream.eventNames().includes('rotate')) {\n            _this5._stream.emit('rotate');\n          } else {\n            _this5._rotate = false;\n          }\n        });\n      });\n    }\n    /**\r\n     * Stat the file and assess information in order to create the proper stream.\r\n     * @param {function} callback - TODO: add param description.\r\n     * @returns {undefined}\r\n     */\n\n  }, {\n    key: \"stat\",\n    value: function stat(callback) {\n      var _this6 = this;\n\n      var target = this._getFile();\n\n      var fullpath = path.join(this.dirname, target);\n      fs.stat(fullpath, function (err, stat) {\n        if (err && err.code === 'ENOENT') {\n          debug('ENOENT ok', fullpath); // Update internally tracked filename with the new target name.\n\n          _this6.filename = target;\n          return callback(null, 0);\n        }\n\n        if (err) {\n          debug(\"err \".concat(err.code, \" \").concat(fullpath));\n          return callback(err);\n        }\n\n        if (!stat || _this6._needsNewFile(stat.size)) {\n          // If `stats.size` is greater than the `maxsize` for this\n          // instance then try again.\n          return _this6._incFile(function () {\n            return _this6.stat(callback);\n          });\n        } // Once we have figured out what the filename is, set it\n        // and return the size.\n\n\n        _this6.filename = target;\n        callback(null, stat.size);\n      });\n    }\n    /**\r\n     * Closes the stream associated with this instance.\r\n     * @param {function} cb - TODO: add param description.\r\n     * @returns {undefined}\r\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(cb) {\n      var _this7 = this;\n\n      if (!this._stream) {\n        return;\n      }\n\n      this._stream.end(function () {\n        if (cb) {\n          cb(); // eslint-disable-line callback-return\n        }\n\n        _this7.emit('flush');\n\n        _this7.emit('closed');\n      });\n    }\n    /**\r\n     * TODO: add method description.\r\n     * @param {number} size - TODO: add param description.\r\n     * @returns {undefined}\r\n     */\n\n  }, {\n    key: \"_needsNewFile\",\n    value: function _needsNewFile(size) {\n      size = size || this._size;\n      return this.maxsize && size >= this.maxsize;\n    }\n    /**\r\n     * TODO: add method description.\r\n     * @param {Error} err - TODO: add param description.\r\n     * @returns {undefined}\r\n     */\n\n  }, {\n    key: \"_onError\",\n    value: function _onError(err) {\n      this.emit('error', err);\n    }\n    /**\r\n     * TODO: add method description.\r\n     * @param {Stream} stream - TODO: add param description.\r\n     * @returns {mixed} - TODO: add return description.\r\n     */\n\n  }, {\n    key: \"_setupStream\",\n    value: function _setupStream(stream) {\n      stream.on('error', this._onError);\n      return stream;\n    }\n    /**\r\n     * TODO: add method description.\r\n     * @param {Stream} stream - TODO: add param description.\r\n     * @returns {mixed} - TODO: add return description.\r\n     */\n\n  }, {\n    key: \"_cleanupStream\",\n    value: function _cleanupStream(stream) {\n      stream.removeListener('error', this._onError);\n      return stream;\n    }\n    /**\r\n     * TODO: add method description.\r\n     */\n\n  }, {\n    key: \"_rotateFile\",\n    value: function _rotateFile() {\n      var _this8 = this;\n\n      this._incFile(function () {\n        return _this8.open();\n      });\n    }\n    /**\r\n     * Unpipe from the stream that has been marked as full and end it so it\r\n     * flushes to disk.\r\n     *\r\n     * @param {function} callback - Callback for when the current file has closed.\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_endStream\",\n    value: function _endStream() {\n      var _this9 = this;\n\n      var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};\n\n      if (this._dest) {\n        this._stream.unpipe(this._dest);\n\n        this._dest.end(function () {\n          _this9._cleanupStream(_this9._dest);\n\n          callback();\n        });\n      } else {\n        callback(); // eslint-disable-line callback-return\n      }\n    }\n    /**\r\n     * Returns the WritableStream for the active file on this instance. If we\r\n     * should gzip the file then a zlib stream is returned.\r\n     *\r\n     * @param {ReadableStream} source – PassThrough to pipe to the file when open.\r\n     * @returns {WritableStream} Stream that writes to disk for the active file.\r\n     */\n\n  }, {\n    key: \"_createStream\",\n    value: function _createStream(source) {\n      var _this10 = this;\n\n      var fullpath = path.join(this.dirname, this.filename);\n      debug('create stream start', fullpath, this.options);\n      var dest = fs.createWriteStream(fullpath, this.options) // TODO: What should we do with errors here?\n      .on('error', function (err) {\n        return debug(err);\n      }).on('close', function () {\n        return debug('close', dest.path, dest.bytesWritten);\n      }).on('open', function () {\n        debug('file open ok', fullpath);\n\n        _this10.emit('open', fullpath);\n\n        source.pipe(dest); // If rotation occured during the open operation then we immediately\n        // start writing to a new PassThrough, begin opening the next file\n        // and cleanup the previous source and dest once the source has drained.\n\n        if (_this10.rotatedWhileOpening) {\n          _this10._stream = new PassThrough();\n\n          _this10._stream.setMaxListeners(30);\n\n          _this10._rotateFile();\n\n          _this10.rotatedWhileOpening = false;\n\n          _this10._cleanupStream(dest);\n\n          source.end();\n        }\n      });\n      debug('create stream ok', fullpath);\n\n      if (this.zippedArchive) {\n        var gzip = zlib.createGzip();\n        gzip.pipe(dest);\n        return gzip;\n      }\n\n      return dest;\n    }\n    /**\r\n     * TODO: add method description.\r\n     * @param {function} callback - TODO: add param description.\r\n     * @returns {undefined}\r\n     */\n\n  }, {\n    key: \"_incFile\",\n    value: function _incFile(callback) {\n      debug('_incFile', this.filename);\n      var ext = path.extname(this._basename);\n      var basename = path.basename(this._basename, ext);\n\n      if (!this.tailable) {\n        this._created += 1;\n\n        this._checkMaxFilesIncrementing(ext, basename, callback);\n      } else {\n        this._checkMaxFilesTailable(ext, basename, callback);\n      }\n    }\n    /**\r\n     * Gets the next filename to use for this instance in the case that log\r\n     * filesizes are being capped.\r\n     * @returns {string} - TODO: add return description.\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_getFile\",\n    value: function _getFile() {\n      var ext = path.extname(this._basename);\n      var basename = path.basename(this._basename, ext);\n      var isRotation = this.rotationFormat ? this.rotationFormat() : this._created; // Caveat emptor (indexzero): rotationFormat() was broken by design When\n      // combined with max files because the set of files to unlink is never\n      // stored.\n\n      var target = !this.tailable && this._created ? \"\".concat(basename).concat(isRotation).concat(ext) : \"\".concat(basename).concat(ext);\n      return this.zippedArchive && !this.tailable ? \"\".concat(target, \".gz\") : target;\n    }\n    /**\r\n     * Increment the number of files created or checked by this instance.\r\n     * @param {mixed} ext - TODO: add param description.\r\n     * @param {mixed} basename - TODO: add param description.\r\n     * @param {mixed} callback - TODO: add param description.\r\n     * @returns {undefined}\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_checkMaxFilesIncrementing\",\n    value: function _checkMaxFilesIncrementing(ext, basename, callback) {\n      // Check for maxFiles option and delete file.\n      if (!this.maxFiles || this._created < this.maxFiles) {\n        return setImmediate(callback);\n      }\n\n      var oldest = this._created - this.maxFiles;\n      var isOldest = oldest !== 0 ? oldest : '';\n      var isZipped = this.zippedArchive ? '.gz' : '';\n      var filePath = \"\".concat(basename).concat(isOldest).concat(ext).concat(isZipped);\n      var target = path.join(this.dirname, filePath);\n      fs.unlink(target, callback);\n    }\n    /**\r\n     * Roll files forward based on integer, up to maxFiles. e.g. if base if\r\n     * file.log and it becomes oversized, roll to file1.log, and allow file.log\r\n     * to be re-used. If file is oversized again, roll file1.log to file2.log,\r\n     * roll file.log to file1.log, and so on.\r\n     * @param {mixed} ext - TODO: add param description.\r\n     * @param {mixed} basename - TODO: add param description.\r\n     * @param {mixed} callback - TODO: add param description.\r\n     * @returns {undefined}\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_checkMaxFilesTailable\",\n    value: function _checkMaxFilesTailable(ext, basename, callback) {\n      var _this12 = this;\n\n      var tasks = [];\n\n      if (!this.maxFiles) {\n        return;\n      } // const isZipped = this.zippedArchive ? '.gz' : '';\n\n\n      var isZipped = this.zippedArchive ? '.gz' : '';\n\n      for (var x = this.maxFiles - 1; x > 1; x--) {\n        tasks.push(function (i, cb) {\n          var _this11 = this;\n\n          var fileName = \"\".concat(basename).concat(i - 1).concat(ext).concat(isZipped);\n          var tmppath = path.join(this.dirname, fileName);\n          fs.exists(tmppath, function (exists) {\n            if (!exists) {\n              return cb(null);\n            }\n\n            fileName = \"\".concat(basename).concat(i).concat(ext).concat(isZipped);\n            fs.rename(tmppath, path.join(_this11.dirname, fileName), cb);\n          });\n        }.bind(this, x));\n      }\n\n      asyncSeries(tasks, function () {\n        fs.rename(path.join(_this12.dirname, \"\".concat(basename).concat(ext)), path.join(_this12.dirname, \"\".concat(basename, \"1\").concat(ext).concat(isZipped)), callback);\n      });\n    }\n  }, {\n    key: \"_createLogDirIfNotExist\",\n    value: function _createLogDirIfNotExist(dirPath) {\n      /* eslint-disable no-sync */\n      if (!fs.existsSync(dirPath)) {\n        fs.mkdirSync(dirPath, {\n          recursive: true\n        });\n      }\n      /* eslint-enable no-sync */\n\n    }\n  }]);\n\n  return File;\n}(TransportStream);"],"mappings":"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"},"metadata":{},"sourceType":"script"}