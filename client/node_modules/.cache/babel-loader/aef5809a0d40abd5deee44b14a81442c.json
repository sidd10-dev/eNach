{"ast":null,"code":"'use strict';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nvar colors = require('@colors/colors/safe');\n\nvar _require = require('triple-beam'),\n    LEVEL = _require.LEVEL,\n    MESSAGE = _require.MESSAGE; //\n// Fix colors not appearing in non-tty environments\n//\n\n\ncolors.enabled = true;\n/**\n * @property {RegExp} hasSpace\n * Simple regex to check for presence of spaces.\n */\n\nvar hasSpace = /\\s+/;\n/*\n * Colorizer format. Wraps the `level` and/or `message` properties\n * of the `info` objects with ANSI color codes based on a few options.\n */\n\nvar Colorizer = /*#__PURE__*/function () {\n  function Colorizer() {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Colorizer);\n\n    if (opts.colors) {\n      this.addColors(opts.colors);\n    }\n\n    this.options = opts;\n  }\n  /*\n   * Adds the colors Object to the set of allColors\n   * known by the Colorizer\n   *\n   * @param {Object} colors Set of color mappings to add.\n   */\n\n\n  _createClass(Colorizer, [{\n    key: \"addColors\",\n    value:\n    /*\n     * Adds the colors Object to the set of allColors\n     * known by the Colorizer\n     *\n     * @param {Object} colors Set of color mappings to add.\n     */\n    function addColors(clrs) {\n      return Colorizer.addColors(clrs);\n    }\n    /*\n     * function colorize (lookup, level, message)\n     * Performs multi-step colorization using @colors/colors/safe\n     */\n\n  }, {\n    key: \"colorize\",\n    value: function colorize(lookup, level, message) {\n      if (typeof message === 'undefined') {\n        message = level;\n      } //\n      // If the color for the level is just a string\n      // then attempt to colorize the message with it.\n      //\n\n\n      if (!Array.isArray(Colorizer.allColors[lookup])) {\n        return colors[Colorizer.allColors[lookup]](message);\n      } //\n      // If it is an Array then iterate over that Array, applying\n      // the colors function for each item.\n      //\n\n\n      for (var i = 0, len = Colorizer.allColors[lookup].length; i < len; i++) {\n        message = colors[Colorizer.allColors[lookup][i]](message);\n      }\n\n      return message;\n    }\n    /*\n     * function transform (info, opts)\n     * Attempts to colorize the { level, message } of the given\n     * `logform` info object.\n     */\n\n  }, {\n    key: \"transform\",\n    value: function transform(info, opts) {\n      if (opts.all && typeof info[MESSAGE] === 'string') {\n        info[MESSAGE] = this.colorize(info[LEVEL], info.level, info[MESSAGE]);\n      }\n\n      if (opts.level || opts.all || !opts.message) {\n        info.level = this.colorize(info[LEVEL], info.level);\n      }\n\n      if (opts.all || opts.message) {\n        info.message = this.colorize(info[LEVEL], info.level, info.message);\n      }\n\n      return info;\n    }\n  }], [{\n    key: \"addColors\",\n    value: function addColors(clrs) {\n      var nextColors = Object.keys(clrs).reduce(function (acc, level) {\n        acc[level] = hasSpace.test(clrs[level]) ? clrs[level].split(hasSpace) : clrs[level];\n        return acc;\n      }, {});\n      Colorizer.allColors = Object.assign({}, Colorizer.allColors || {}, nextColors);\n      return Colorizer.allColors;\n    }\n  }]);\n\n  return Colorizer;\n}();\n/*\n * function colorize (info)\n * Returns a new instance of the colorize Format that applies\n * level colors to `info` objects. This was previously exposed\n * as { colorize: true } to transports in `winston < 3.0.0`.\n */\n\n\nmodule.exports = function (opts) {\n  return new Colorizer(opts);\n}; //\n// Attach the Colorizer for registration purposes\n//\n\n\nmodule.exports.Colorizer = module.exports.Format = Colorizer;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","colors","require","_require","LEVEL","MESSAGE","enabled","hasSpace","Colorizer","opts","arguments","undefined","addColors","options","value","clrs","colorize","lookup","level","message","Array","isArray","allColors","len","transform","info","all","nextColors","keys","reduce","acc","test","split","assign","module","exports","Format"],"sources":["D:/Other Files/tktnew/eMandate/client/node_modules/logform/dist/colorize.js"],"sourcesContent":["'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar colors = require('@colors/colors/safe');\n\nvar _require = require('triple-beam'),\n    LEVEL = _require.LEVEL,\n    MESSAGE = _require.MESSAGE; //\n// Fix colors not appearing in non-tty environments\n//\n\n\ncolors.enabled = true;\n/**\n * @property {RegExp} hasSpace\n * Simple regex to check for presence of spaces.\n */\n\nvar hasSpace = /\\s+/;\n/*\n * Colorizer format. Wraps the `level` and/or `message` properties\n * of the `info` objects with ANSI color codes based on a few options.\n */\n\nvar Colorizer = /*#__PURE__*/function () {\n  function Colorizer() {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Colorizer);\n\n    if (opts.colors) {\n      this.addColors(opts.colors);\n    }\n\n    this.options = opts;\n  }\n  /*\n   * Adds the colors Object to the set of allColors\n   * known by the Colorizer\n   *\n   * @param {Object} colors Set of color mappings to add.\n   */\n\n\n  _createClass(Colorizer, [{\n    key: \"addColors\",\n    value:\n    /*\n     * Adds the colors Object to the set of allColors\n     * known by the Colorizer\n     *\n     * @param {Object} colors Set of color mappings to add.\n     */\n    function addColors(clrs) {\n      return Colorizer.addColors(clrs);\n    }\n    /*\n     * function colorize (lookup, level, message)\n     * Performs multi-step colorization using @colors/colors/safe\n     */\n\n  }, {\n    key: \"colorize\",\n    value: function colorize(lookup, level, message) {\n      if (typeof message === 'undefined') {\n        message = level;\n      } //\n      // If the color for the level is just a string\n      // then attempt to colorize the message with it.\n      //\n\n\n      if (!Array.isArray(Colorizer.allColors[lookup])) {\n        return colors[Colorizer.allColors[lookup]](message);\n      } //\n      // If it is an Array then iterate over that Array, applying\n      // the colors function for each item.\n      //\n\n\n      for (var i = 0, len = Colorizer.allColors[lookup].length; i < len; i++) {\n        message = colors[Colorizer.allColors[lookup][i]](message);\n      }\n\n      return message;\n    }\n    /*\n     * function transform (info, opts)\n     * Attempts to colorize the { level, message } of the given\n     * `logform` info object.\n     */\n\n  }, {\n    key: \"transform\",\n    value: function transform(info, opts) {\n      if (opts.all && typeof info[MESSAGE] === 'string') {\n        info[MESSAGE] = this.colorize(info[LEVEL], info.level, info[MESSAGE]);\n      }\n\n      if (opts.level || opts.all || !opts.message) {\n        info.level = this.colorize(info[LEVEL], info.level);\n      }\n\n      if (opts.all || opts.message) {\n        info.message = this.colorize(info[LEVEL], info.level, info.message);\n      }\n\n      return info;\n    }\n  }], [{\n    key: \"addColors\",\n    value: function addColors(clrs) {\n      var nextColors = Object.keys(clrs).reduce(function (acc, level) {\n        acc[level] = hasSpace.test(clrs[level]) ? clrs[level].split(hasSpace) : clrs[level];\n        return acc;\n      }, {});\n      Colorizer.allColors = Object.assign({}, Colorizer.allColors || {}, nextColors);\n      return Colorizer.allColors;\n    }\n  }]);\n\n  return Colorizer;\n}();\n/*\n * function colorize (info)\n * Returns a new instance of the colorize Format that applies\n * level colors to `info` objects. This was previously exposed\n * as { colorize: true } to transports in `winston < 3.0.0`.\n */\n\n\nmodule.exports = function (opts) {\n  return new Colorizer(opts);\n}; //\n// Attach the Colorizer for registration purposes\n//\n\n\nmodule.exports.Colorizer = module.exports.Format = Colorizer;"],"mappings":"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"},"metadata":{},"sourceType":"script"}