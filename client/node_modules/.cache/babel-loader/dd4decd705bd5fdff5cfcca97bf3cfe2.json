{"ast":null,"code":"var _jsxFileName = \"D:\\\\Other Files\\\\tktnew\\\\eMandate\\\\client\\\\src\\\\components\\\\login\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styles from './login.module.css';\nimport ErrorModal from '../ErrorModal/ErrorModal';\nimport Button from '../Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nconst Login = props => {\n  _s();\n\n  axios.defaults.withCredentials = true;\n  const userNameInputRef = useRef();\n  const passwordInputRef = useRef();\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  const resetFormData = () => {\n    userNameInputRef.current.value = '';\n    passwordInputRef.current.value = '';\n  };\n\n  const validateForm = (username, password) => {\n    if (username.length == 0) return {\n      msg: \"Username Can't be Empty!\",\n      valid: false\n    };\n    if (password.length == 0) return {\n      msg: \"Password Can't be Empty!\",\n      valid: false\n    };\n    return {\n      valid: true\n    };\n  };\n\n  const loginHandler = e => {\n    e.preventDefault();\n    const username = userNameInputRef.current.value;\n    const password = passwordInputRef.current.value;\n    const formValid = validateForm(username, password);\n\n    if (formValid.valid) {\n      resetFormData(); // console.log(username,password)\n\n      axios.post(\"http://localhost:3001/api/login\", {\n        username,\n        password\n      }).then(res => {\n        navigate('/eMandate');\n      }).catch(er => {\n        setError({\n          msg: er.response.data\n        }); // console.log(e)\n      });\n    } else {\n      setError({\n        msg: formValid.msg\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      errorMsg: error.msg,\n      onCancelError: () => setError(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"header\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: loginHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        ref: userNameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        ref: passwordInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"3iSG0f0k+FYQjOKdLM/3zdWXMig=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useRef","useNavigate","styles","ErrorModal","Button","axios","require","Login","props","defaults","withCredentials","userNameInputRef","passwordInputRef","error","setError","navigate","resetFormData","current","value","validateForm","username","password","length","msg","valid","loginHandler","e","preventDefault","formValid","post","then","res","catch","er","response","data"],"sources":["D:/Other Files/tktnew/eMandate/client/src/components/login/login.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from './login.module.css';\r\nimport ErrorModal from '../ErrorModal/ErrorModal';\r\nimport Button from '../Button/Button';\r\nconst axios = require('axios')\r\n\r\nconst Login = (props) => {\r\n    axios.defaults.withCredentials = true\r\n    const userNameInputRef = useRef()\r\n    const passwordInputRef = useRef()\r\n    const [error, setError] = useState(null)\r\n    const navigate = useNavigate()\r\n\r\n    const resetFormData = () => {\r\n        userNameInputRef.current.value = ''\r\n        passwordInputRef.current.value = ''\r\n    }\r\n\r\n    const validateForm = (username, password) => {\r\n        if(username.length == 0)\r\n            return {msg: \"Username Can't be Empty!\", valid: false}\r\n        if(password.length == 0)\r\n            return {msg: \"Password Can't be Empty!\", valid: false}\r\n        return {valid: true}\r\n    }\r\n\r\n    const loginHandler = (e) => {\r\n        e.preventDefault()\r\n        const username = userNameInputRef.current.value\r\n        const password = passwordInputRef.current.value\r\n        const formValid = validateForm(username, password)\r\n        if (formValid.valid) {\r\n            resetFormData()\r\n            // console.log(username,password)\r\n            axios.post(\"http://localhost:3001/api/login\", {\r\n                username,\r\n                password\r\n            }).then(res => {\r\n                navigate('/eMandate')\r\n            }).catch(er => {\r\n                setError({ msg: er.response.data })\r\n                // console.log(e)\r\n            })\r\n        } else {\r\n            setError({msg: formValid.msg})\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {error && (\r\n                <ErrorModal errorMsg={error.msg} onCancelError={() => setError(null)}></ErrorModal>\r\n            )}\r\n            <h2 className='header'>Login</h2>\r\n            <form onSubmit={loginHandler}>\r\n                <label htmlFor=\"username\">Username</label>\r\n                <input type=\"text\" name=\"username\" ref={userNameInputRef}></input>\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" name=\"password\" ref={passwordInputRef}></input>\r\n                <Button type=\"submit\">Login</Button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login"],"mappings":"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"},"metadata":{},"sourceType":"module"}