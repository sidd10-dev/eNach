{"ast":null,"code":"/**\r\n * tail-file.js: TODO: add file header description.\r\n *\r\n * (C) 2010 Charlie Robbins\r\n * MIT LICENCE\r\n */\n'use strict';\n\nvar fs = require('fs');\n\nvar _require = require('string_decoder'),\n    StringDecoder = _require.StringDecoder;\n\nvar _require2 = require('readable-stream'),\n    Stream = _require2.Stream;\n/**\r\n * Simple no-op function.\r\n * @returns {undefined}\r\n */\n\n\nfunction noop() {}\n/**\r\n * TODO: add function description.\r\n * @param {Object} options - Options for tail.\r\n * @param {function} iter - Iterator function to execute on every line.\r\n* `tail -f` a file. Options must include file.\r\n * @returns {mixed} - TODO: add return description.\r\n */\n\n\nmodule.exports = function (options, iter) {\n  var buffer = Buffer.alloc(64 * 1024);\n  var decode = new StringDecoder('utf8');\n  var stream = new Stream();\n  var buff = '';\n  var pos = 0;\n  var row = 0;\n\n  if (options.start === -1) {\n    delete options.start;\n  }\n\n  stream.readable = true;\n\n  stream.destroy = function () {\n    stream.destroyed = true;\n    stream.emit('end');\n    stream.emit('close');\n  };\n\n  fs.open(options.file, 'a+', '0644', function (err, fd) {\n    if (err) {\n      if (!iter) {\n        stream.emit('error', err);\n      } else {\n        iter(err);\n      }\n\n      stream.destroy();\n      return;\n    }\n\n    (function read() {\n      if (stream.destroyed) {\n        fs.close(fd, noop);\n        return;\n      }\n\n      return fs.read(fd, buffer, 0, buffer.length, pos, function (error, bytes) {\n        if (error) {\n          if (!iter) {\n            stream.emit('error', error);\n          } else {\n            iter(error);\n          }\n\n          stream.destroy();\n          return;\n        }\n\n        if (!bytes) {\n          if (buff) {\n            // eslint-disable-next-line eqeqeq\n            if (options.start == null || row > options.start) {\n              if (!iter) {\n                stream.emit('line', buff);\n              } else {\n                iter(null, buff);\n              }\n            }\n\n            row++;\n            buff = '';\n          }\n\n          return setTimeout(read, 1000);\n        }\n\n        var data = decode.write(buffer.slice(0, bytes));\n\n        if (!iter) {\n          stream.emit('data', data);\n        }\n\n        data = (buff + data).split(/\\n+/);\n        var l = data.length - 1;\n        var i = 0;\n\n        for (; i < l; i++) {\n          // eslint-disable-next-line eqeqeq\n          if (options.start == null || row > options.start) {\n            if (!iter) {\n              stream.emit('line', data[i]);\n            } else {\n              iter(null, data[i]);\n            }\n          }\n\n          row++;\n        }\n\n        buff = data[l];\n        pos += bytes;\n        return read();\n      });\n    })();\n  });\n\n  if (!iter) {\n    return stream;\n  }\n\n  return stream.destroy;\n};","map":{"version":3,"names":["fs","require","_require","StringDecoder","_require2","Stream","noop","module","exports","options","iter","buffer","Buffer","alloc","decode","stream","buff","pos","row","start","readable","destroy","destroyed","emit","open","file","err","fd","read","close","length","error","bytes","setTimeout","data","write","slice","split","l","i"],"sources":["D:/Other Files/tktnew/eMandate/client/node_modules/winston/dist/winston/tail-file.js"],"sourcesContent":["/**\r\n * tail-file.js: TODO: add file header description.\r\n *\r\n * (C) 2010 Charlie Robbins\r\n * MIT LICENCE\r\n */\n'use strict';\n\nvar fs = require('fs');\n\nvar _require = require('string_decoder'),\n    StringDecoder = _require.StringDecoder;\n\nvar _require2 = require('readable-stream'),\n    Stream = _require2.Stream;\n/**\r\n * Simple no-op function.\r\n * @returns {undefined}\r\n */\n\n\nfunction noop() {}\n/**\r\n * TODO: add function description.\r\n * @param {Object} options - Options for tail.\r\n * @param {function} iter - Iterator function to execute on every line.\r\n* `tail -f` a file. Options must include file.\r\n * @returns {mixed} - TODO: add return description.\r\n */\n\n\nmodule.exports = function (options, iter) {\n  var buffer = Buffer.alloc(64 * 1024);\n  var decode = new StringDecoder('utf8');\n  var stream = new Stream();\n  var buff = '';\n  var pos = 0;\n  var row = 0;\n\n  if (options.start === -1) {\n    delete options.start;\n  }\n\n  stream.readable = true;\n\n  stream.destroy = function () {\n    stream.destroyed = true;\n    stream.emit('end');\n    stream.emit('close');\n  };\n\n  fs.open(options.file, 'a+', '0644', function (err, fd) {\n    if (err) {\n      if (!iter) {\n        stream.emit('error', err);\n      } else {\n        iter(err);\n      }\n\n      stream.destroy();\n      return;\n    }\n\n    (function read() {\n      if (stream.destroyed) {\n        fs.close(fd, noop);\n        return;\n      }\n\n      return fs.read(fd, buffer, 0, buffer.length, pos, function (error, bytes) {\n        if (error) {\n          if (!iter) {\n            stream.emit('error', error);\n          } else {\n            iter(error);\n          }\n\n          stream.destroy();\n          return;\n        }\n\n        if (!bytes) {\n          if (buff) {\n            // eslint-disable-next-line eqeqeq\n            if (options.start == null || row > options.start) {\n              if (!iter) {\n                stream.emit('line', buff);\n              } else {\n                iter(null, buff);\n              }\n            }\n\n            row++;\n            buff = '';\n          }\n\n          return setTimeout(read, 1000);\n        }\n\n        var data = decode.write(buffer.slice(0, bytes));\n\n        if (!iter) {\n          stream.emit('data', data);\n        }\n\n        data = (buff + data).split(/\\n+/);\n        var l = data.length - 1;\n        var i = 0;\n\n        for (; i < l; i++) {\n          // eslint-disable-next-line eqeqeq\n          if (options.start == null || row > options.start) {\n            if (!iter) {\n              stream.emit('line', data[i]);\n            } else {\n              iter(null, data[i]);\n            }\n          }\n\n          row++;\n        }\n\n        buff = data[l];\n        pos += bytes;\n        return read();\n      });\n    })();\n  });\n\n  if (!iter) {\n    return stream;\n  }\n\n  return stream.destroy;\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}