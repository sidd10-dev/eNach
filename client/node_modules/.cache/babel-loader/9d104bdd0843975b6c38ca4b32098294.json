{"ast":null,"code":"'use strict';\n/*\n  node-schedule\n  A cron-like and not-cron-like job scheduler for Node.\n*/\n\nconst {\n  Job,\n  scheduledJobs\n} = require('./Job');\n/* API\n  invoke()\n  runOnDate(date)\n  schedule(date || recurrenceRule || cronstring)\n  cancel(reschedule = false)\n  cancelNext(reschedule = true)\n\n   Property constraints\n  name: readonly\n  job: readwrite\n*/\n\n/* Convenience methods */\n\n\nfunction scheduleJob() {\n  if (arguments.length < 2) {\n    throw new RangeError('Invalid number of arguments');\n  }\n\n  const name = arguments.length >= 3 && typeof arguments[0] === 'string' ? arguments[0] : null;\n  const spec = name ? arguments[1] : arguments[0];\n  const method = name ? arguments[2] : arguments[1];\n  const callback = name ? arguments[3] : arguments[2];\n\n  if (typeof method !== 'function') {\n    throw new RangeError('The job method must be a function.');\n  }\n\n  const job = new Job(name, method, callback);\n\n  if (job.schedule(spec)) {\n    return job;\n  }\n\n  return null;\n}\n\nfunction rescheduleJob(job, spec) {\n  if (job instanceof Job) {\n    if (job.reschedule(spec)) {\n      return job;\n    }\n  } else if (typeof job === 'string') {\n    if (Object.prototype.hasOwnProperty.call(scheduledJobs, job)) {\n      if (scheduledJobs[job].reschedule(spec)) {\n        return scheduledJobs[job];\n      }\n    } else {\n      throw new Error('Cannot reschedule one-off job by name, pass job reference instead');\n    }\n  }\n\n  return null;\n}\n\nfunction cancelJob(job) {\n  let success = false;\n\n  if (job instanceof Job) {\n    success = job.cancel();\n  } else if (typeof job == 'string' || job instanceof String) {\n    if (job in scheduledJobs && Object.prototype.hasOwnProperty.call(scheduledJobs, job)) {\n      success = scheduledJobs[job].cancel();\n    }\n  }\n\n  return success;\n}\n\nfunction gracefulShutdown() {\n  const jobs = Object.keys(scheduledJobs).map(key => scheduledJobs[key]);\n  jobs.forEach(function (job) {\n    job.cancel();\n  });\n  let running = false;\n\n  for (let i = 0; i < jobs.length; i++) {\n    if (jobs[i].running > 0) {\n      running = true;\n      break;\n    }\n  }\n\n  return new Promise(function (resolve) {\n    if (running) {\n      setInterval(function () {\n        for (let i = 0; i < jobs.length; i++) {\n          if (jobs[i].running > 0) {\n            return;\n          }\n        }\n\n        resolve();\n      }, 500);\n    } else {\n      resolve();\n    }\n  });\n}\n/* Public API */\n\n\nmodule.exports = {\n  scheduleJob,\n  rescheduleJob,\n  scheduledJobs,\n  cancelJob,\n  gracefulShutdown\n};","map":{"version":3,"names":["Job","scheduledJobs","require","scheduleJob","arguments","length","RangeError","name","spec","method","callback","job","schedule","rescheduleJob","reschedule","Object","prototype","hasOwnProperty","call","Error","cancelJob","success","cancel","String","gracefulShutdown","jobs","keys","map","key","forEach","running","i","Promise","resolve","setInterval","module","exports"],"sources":["D:/Other Files/tktnew/eMandate/client/node_modules/node-schedule/lib/schedule.js"],"sourcesContent":["'use strict';\n\n/*\n  node-schedule\n  A cron-like and not-cron-like job scheduler for Node.\n*/\n\nconst { Job, scheduledJobs } = require('./Job')\n\n/* API\n  invoke()\n  runOnDate(date)\n  schedule(date || recurrenceRule || cronstring)\n  cancel(reschedule = false)\n  cancelNext(reschedule = true)\n\n   Property constraints\n  name: readonly\n  job: readwrite\n*/\n\n/* Convenience methods */\nfunction scheduleJob() {\n  if (arguments.length < 2) {\n    throw new RangeError('Invalid number of arguments');\n  }\n\n  const name = (arguments.length >= 3 && typeof arguments[0] === 'string') ? arguments[0] : null;\n  const spec = name ? arguments[1] : arguments[0];\n  const method = name ? arguments[2] : arguments[1];\n  const callback = name ? arguments[3] : arguments[2];\n\n  if (typeof method !== 'function') {\n    throw new RangeError('The job method must be a function.');\n  }\n\n  const job = new Job(name, method, callback);\n\n  if (job.schedule(spec)) {\n    return job;\n  }\n\n  return null;\n}\n\nfunction rescheduleJob(job, spec) {\n  if (job instanceof Job) {\n    if (job.reschedule(spec)) {\n      return job;\n    }\n  } else if (typeof job === 'string') {\n    if (Object.prototype.hasOwnProperty.call(scheduledJobs, job)) {\n      if (scheduledJobs[job].reschedule(spec)) {\n        return scheduledJobs[job];\n      }\n    } else {\n      throw new Error('Cannot reschedule one-off job by name, pass job reference instead')\n    }\n  }\n  return null;\n}\n\nfunction cancelJob(job) {\n  let success = false;\n  if (job instanceof Job) {\n    success = job.cancel();\n  } else if (typeof job == 'string' || job instanceof String) {\n    if (job in scheduledJobs && Object.prototype.hasOwnProperty.call(scheduledJobs, job)) {\n      success = scheduledJobs[job].cancel();\n    }\n  }\n\n  return success;\n}\n\nfunction gracefulShutdown() {\n  const jobs = Object.keys(scheduledJobs).map(key => scheduledJobs[key]);\n  jobs.forEach(function (job) {\n    job.cancel();\n  });\n\n  let running = false;\n  for (let i = 0; i < jobs.length; i++) {\n    if (jobs[i].running > 0) {\n      running = true;\n      break;\n    }\n  }\n\n  return new Promise(function (resolve) {\n    if (running) {\n      setInterval(function () {\n        for (let i = 0; i < jobs.length; i++) {\n          if (jobs[i].running > 0) {\n            return;\n          }\n        }\n\n        resolve();\n      }, 500);\n    } else {\n      resolve();\n    }\n  });\n}\n\n/* Public API */\nmodule.exports = {\n  scheduleJob,\n  rescheduleJob,\n  scheduledJobs,\n  cancelJob,\n  gracefulShutdown,\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}